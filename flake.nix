{
  description = "SlackIn2Zammad";

  inputs = {
    nixpkgs.url = "github:NixOS/nixpkgs";
  };

  outputs = { self, nixpkgs }:
  let

    allSystems = [
      "x86_64-linux"
      "aarch64-linux"
      "x86_64-darwin"
      "aarch64-darwin"
    ];

    supportedSystems = [ "x86_64-linux" "x86_64-darwin" "aarch64-linux" "aarch64-darwin" ];
    forAllSystems = nixpkgs.lib.genAttrs supportedSystems;
    nixpkgsFor = forAllSystems (system: import nixpkgs { inherit system; config.allowUnfree = true; config.cudaSupport= true; overlays = [  ];  });
  in
  {
    nixosModules = forAllSystems (system:
    let
      pkgs = nixpkgsFor.${system};
    in
    {
      slack2zammad =  import ./module/slack2zammad.nix;
    });

    packages = forAllSystems (system:
    let
      pkgs = nixpkgsFor.${system};
    in
    {
      slack2zammad = 
      let
        packageOverrides = pkgs.callPackage ./python-packages.nix { };
        python = pkgs.python312.override { inherit packageOverrides; };
      in
      pkgs.callPackage ./package/package.nix { inherit python; };
    });

    slack2zammad = forAllSystems (system: self.packages.${system}.slack2zammad);


    devShells = forAllSystems (system: 
    let
      pkgs = nixpkgsFor.${system};
    in
    {
      default =
        let
          packageOverrides = pkgs.callPackage ./python-packages.nix { };
          python = pkgs.python312.override { inherit packageOverrides; };

        in
        pkgs.mkShell {
          packages = [
            (python.withPackages (ps: with ps; [

                  # These are generated by pip2nix
                  slack-bolt
                  zammadoo
                  python-dotenv

                  # packages from nixpkgs are supported as well
                ]))
              ];
            };
          });
        };
      }
